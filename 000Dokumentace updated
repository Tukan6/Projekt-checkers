Jak program funguje:
- nejdrive se nageneruje pomoci gridu hraci plocha, pote si vytvorim komponenty pro hrace jedna a hrace dva
- vytvorim si 2d pole, kde mam hozene hodnoty z enumu
- hodnoty jsou: hrac jedna, hrac dva, prazdne policko, mozny pohyb
- toto pole mi pomuze pri porovnavani a zjistovani pozic u pohybu figurek
- komponenty pote vlozim na hraci desku, nejdriv hrace jedna, ve for smyčce si vzdy zjistim, zda je index smicky sudy nebo lichy, a podle toho zrovna na danou pozici na desce vlozim figurku a nebo ne
- takhle to udelam i s druhym hracem, akorat si kontroluju liche, aby byly oproti opacnemu hracovi diagonalne
- pro prepinani hracu je vytvorena promenna jestli je na rade prvni hrac, ktery i zacina
- po kliknuti na figurku se v prislusne metode zjisti radek a sloupek kde se figurka nachazi, pote zjistim, zda uz neni nakliknuta nejaka jina figurka, pokud ne, pokracuju normalne, pokud uz je nakliknuta jina, pozice se resetuje, a do metody vlezu znovu s novou figurkou
- tedka zjistuju, zda je figurka na kraji, nebo "uprostred" desky, kdyz je na kraji tak pracuju jenom se stranou odvracenou od kraje desky, jinak bych byl mimo hranice desky = error
- vzdycky se nejdriv kouknu, zda uz je diagonalne od nakliknute figurky nejaka pratelska figurka, v takovem pripade se nic negeneruje, protoze timto smerem se nemuzu v tuto chvili nijak pohnout
- pokud na vedlejsi diagonalni pozici od puvodni figurky neni nic, nageneruje se tam komponent zelene tecky, ktera znazornuje mozny pohyb zde, ta je samozrejme klikatelna
- pokud se na vedlejsi diagonalni pozici nachazi nepritelska figurka, tak si nejdriv zjistim,  zda se za ni nachazi bud moje, nepratelska figurka nebo kraj desky, pokud ani jedno, zelena tecka znazornujici mozny pohyb se nageneruje az o jednu pozici za touto nepratelskou figurkou, a je to jediny mozny pohyb, kam v tuto situaci muzu
- v situaci ze muzu kliknout na pozici, kde nic neni, tak se tam jen pohnu, tim ze jen nastavim row a column u dane komponenty, zelene tecky se smazou, na puvodni pozici figurky se nastavi v poli, ze uz se zde nic nenachazi a na nove pozici se nastavi pozice prislusneho hrace, hrac ktery je na tahu se prehodi na druheho hrace
- v situaci ze muzu vyhodit nepratelskou figurku (kdyz je ta moznost tak musim), skocim za figurku, podle smeru preskoceni (levo, pravo) vlezu do prislusne metody, kde si zjistim od nove pozice na kterou jsem skocil pozici nepratelske figurky kterou jsem prave vyhodil, projedu si celou herni desku a porovnavam, zda uz se nachazim na teto pozici, kterou chci smazat (vyhozena figurka), az se tam dostanu, tak komponentu jednoduse smazu a odectu od pocitadla zbivajicich hracu daneho hrace
- uplne stejne to funguje pro oba hrace, akorat je vse zrcadlove otocene
- kdyz figurka dorazi na opacny konec desky, zmeni se na kralovnu, na figurce se objevi pismeno "k"
- ta se muze hybat diagonalne jak daleko chce
- to funguje na principu, ze si zvlast kontroluju pozici diagonalne vedle kralovny ve vsech smerech zvlast (vlevo-nahoru, vpravo-nahoru, ...)
- vzdycky si po celem cyklu kontrolovani kazdeho smeru posunu vzadlenost kontrolovani o jeden dal
- kontroluju tyto veci: pratelskou figurku, nepratelskou figurku, kraj desky
- maximalni vzdalenost, na kterou kontroluju je 7 policek od kralovny, protoze deska je 8x8, takze dal se jit neda
- pro kazdy smer je udelana promenna, ktera muze kontrolovani jednotliveho smeru vypnout
- situace pro pratelskou a nepratelskou figurku jsou stejne jako u normalni male figurky, pokud je pratelska, smer se vypne a uz se nekontroluje do konce cyklu teto kralovny
- pokud je nepratleska, kouknu se za ni, pokud tam neni kraj, nebo jina figurka, muzu ji preskocit a smer se ukonci
- u kralovny jsou ctyry smery vyhozeni, oproti malym figurkam kde jsou smery jen dva
- smazani vyhozene figurky funguje stejne jako u male figurky
- v jednotlivych smerech se muzu posunout, jak daleko chci, a muzu cestovat diagonalne dozadu i dopredu oproti malym figurkam, ktere se pohybuji jenom diagonalne ve smeru dopredu
- kralovna se muze vyhodit stejnym zpusobem jako mala figurka, kdyz ji jina mala nebo kralovna preskoci
- hraje se do doby, nez je nejaky hrac bez figurek, to kontroluju pomoci pocitadla figurek, kde je nastaveno 12 figurek
- po vyhre jednoho s hracu se objevi napis hrace ktery vyhral, a je konec


jednotlive funkce, a kousky kodu:
VYTVORENI PROMENNYCH A POLÍ
- nejdriv vytvorim enum kde je hrac1, hrac2, none, cango
- rows a cols, nastavim na 8, protoze deska je 8x8
- 2d pole BoardType - nastavuje po cele desce hodnoty z enumu
- p1turn - kdo je na rade
- isclicked - je uz nakliknuta nejaka figurka
- cantake - muzu vyhodit nepratelskou figurku
- 
GENEROVANI DESKY A FIGUREK
- nagenerovani desky se dela v xamlu rucne, vytvorim si grid a vsechny pozice
- figurky se nahazou na grid pomoci zjistovani sude a liche pozice
- nejdriv pro jistotu smazu vsechny definitions a children na desce
- pote si nadefinuju radky a sloupce
- nejdrive generuju hrace jedna, ke kazde figurce hodim klick
- pokud jsem ve for smycce na sude pozici, figurku vlozim
- na dalsim radku kontorluju liche
- a na tretim za se sude
- u druheho hrace to je naopak, nejdriv liche, pak sude a nakonec zase liche
POHYB HRACE
- zjistim kdo je na rade, jestli druhy hrac tak se nic nedeje, a cekam na kliknuti na druheho hrace
- pokud prvni tak hraju
- vlezu do prvni metody pro hrace jedna - Player1_Click
- nejdriv zjistim, zda je nakliknuta jina figurka, pokud ano, smazu zelene kolecka pro pohyb, vsechny promenne dam na false (nakliknuta jina figurka, jeslti muzu vyhodit), pote do metody vlezu znovu s novou figurkou
- zjistim jestli je nakliknuta figurka na kraji desky, pokud ano kontroluju jen stranu odvracenou od kraje
- nastavim ze uz mam nakliknutou figurku na true a vytvorim kolecko pro pohyb, nastavim mu klick na metodu cango1 (metoda pro pohyb pro hrace 1)
- nejdriv zjistim jestli je vedle hrac dva, pokud ano tak zjistim jestli je za nim jeste misto nebo jina figurka, pokud za ni neco je, nemuzu vyhodit a nikam se nemuzu pohnout
- pokud za ni nic neni, kolecko pro pohyb posunu az za ni, a nastavim si, ze tato figurka muze vyhodit, a normalni pohyb o jeden kde nic neni se zrusi, a nemam na vyber nez vyhodit
- kolecko pro pohyb je normalni komponenta kterou si vzdy nageneruju nebo smazu podle situace, vzdycky ji pridam klick pro urcenou metodu na pohyb
- po kliknuti na pohyb vlezu do metody CanGo1_Click:
  - tam si nejdriv nastavim puvodni pozici figurky v poli na none (nic se zde uz nenachazi)
  - pote mam podminky na situace, kdy muzu vyhodit nejakou figurku, napriklad muzu vyhodit figurku smerem doleva, tak se dostanu pres podminku cantakeleft
  - zde nejdriv nastavim pozici vyhozene figurky v poli na none
  - pote foreach smyckou projedu celou desku, zde si vytvorim uielement, zjistim row a col pozice, kterou chci smazat (vyhozena figurka)
  - pokud se uielement rovna pozici, kde se nachazi figurka kterou chci smazat, tak uielement smazu, tim se smaze vyhozena figurka
  - odectu od pocitadla zbivajicih hracu
  - cantake pro dany smer dam na false
  - tedka nastavim row a col pro figurku, se kterou jsem ted hybal na pozici kam ji chci posunout
  - nastavim v poli ze se zde nachazi figurka
  - promennou ze mam nakliknutou figurku dam na false
  - prehodim hrace, ktery je na tahu
  - smazu vsechny kolecka pro pohyb
  - pote jsou dve podminky, jedna jestli zbivaji jeste nejake figurky, pokud ano tak se normalne hraje dal, pokud ne ukaze se text kdo vyhral a je konec
  - pak se kouknu, jestli uz jsem se neposunul na konec hraci desky, pokud ano, smazu dane figurce klick z metody CanGo1_Click a pridam ji klick na metodu Player1_kingClick
  - nastavim visibilitu pismenka "k" na figurce na visible, takze se z figurky stala kralovna
- po vyreseni pohybu se ceka na kliknuti na dalsi figurky, tentokrat u druheho hrace, pro toho plati vsechno stejne jako u hrace jedna, akorat je vsechno obracene a pohybuje se nahoru pricemz hrac jedna se pohybuje dolu (vsechno diagonalne)
- pokud se ale klikne na kralovnu, tak se vleze do specialni metody Player1_kingClick (pro hrace jedna):
  - opet zjistim zda je dany hrac na rade, pokud se udelam to same jako predtim, pokud ano, pokracuju
  - nactu pozici kralovny do promennych row a col
  - a vytvorim 4 promenne pro smery kontrolovani (nahoru - doleva, doprava; dolu - doleva, doprava)
  - promenna pro smery urcuje, zda se bude dalsi smer nadale kontrolovat
  - nejdriv zjistim, jestli nejsem v nejakem rohu, nebo na kraji desky, v tom pripade se hnedka zrusi smery pro strany, kde je stena
  - pote nastavim, ze mam nakliknutou figurku, nastavim klick komponentu na pohyb, zjistim jeslti neni nejaka vedlejsi figurka nepratelska
  - pokud je za nepratelskou figurkou nejaky objekt nebo stena, tento smer se ukonci
  - pokud za ni nic neni, nastavim ze muzu vyhodit timto smerem, kolecko pro pohyb nastavim za figurku kterou muzu vyhodit, a smer se ukoncuje, kralovna ma na vyber, zda chce vyhodit nebo ne
  - pokud je na kontrolovane pozici pratelska figurka, smer konci
  - pokud ve smeru neni ani kraj, nepratelska figurka nebo pratelska figurka, vytvorim kolecko pro pohyb uplne normalne na policku na kterem zrovna kontroluji
  - po skonceni jednoho cyklu kontrolovani se pricte index, to znamena, ze se kontroluje o jedno policko dal v danem diagonalnim smeru, ktery jeste neni ukonceny
  - az se ukonci vsechny smery, muzu si vybrat, kam pujdu, nebo si treba nakliknout jinou figurku
  - pohyb se potom zarizuje uplne stejne jako u male figurky v metode CanGo1_Click (nastavim row a col na pozici kde je kolecko pro pohyb, nastavim pole a vsechny promenne)

pro hrace dva jsou metody stejne, jenom je cislo 2
SetupBoard - na desku nahazi figurky a nastavi jim pozice v poli
Player1_Click, Player2_Click - zajistuje vytvoreni kolecek pro pohyb
Player1_kingClick, Player2_kingClick - zajistuje vytvoreni kolecek pro pohyb pro kralovnu
CanGo1_Click, CanGo2_Click - zajistuje posunuti figurky na misto, kam jsme figurku posunuli, pripadne vyhodi vyhozene figurky
